# List the number of films per category
SELECT  category_id, COUNT(film_id)
FROM film_category
GROUP BY category_id;

# Retrieve the store ID, city, and country for each store
SELECT city, country, store_id
FROM country
INNER JOIN city
ON city.country_id = country.country_id
INNER JOIN address
USING (city_id)
INNER JOIN store 
USING (address_id);   

# Calculate the total revenue generated by each store in dollars
SELECT store.store_id, SUM(amount) AS total_revenue
FROM payment
INNER JOIN staff
ON payment.staff_id = staff.staff_id
INNER JOIN store
ON staff.store_id = store.store_id
GROUP BY store.store_id;

# Determine the average running time of films for each category
SELECT category.name, AVG(film.length)  AS avg_running_time
FROM film
INNER JOIN film_category
ON film.film_id = film_category.film_id
INNER JOIN category
ON film_category.category_id = category.category_id
GROUP BY category.name;

# Identify the film categories with the longest average running time
SELECT category.name, AVG(film.length)  AS avg_running_time
FROM film
INNER JOIN film_category
ON film.film_id = film_category.film_id
INNER JOIN category
ON film_category.category_id = category.category_id
GROUP BY category.name
ORDER BY avg_running_time DESC
LIMIT 5;

# Display the top 10 most frequently rented movies in descending order

# Determine if "Academy Dinosaur" can be rented from Store 1

# Provide a list of all distinct film titles, along with their availability status in the inventory